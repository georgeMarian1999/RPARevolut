<Activity mc:Ignorable="sap sap2010" x:Class="CardOptions" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_selectedButton" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>772.8,840</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CardOptions" sap:VirtualizedContainerService.HintSize="476.8,675.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="JsonData" />
      <Variable x:TypeArguments="njl:JObject" Name="Data" />
      <Variable x:TypeArguments="x:String" Name="selectedButton" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ufa:FormActivity Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormTitle="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" DisableMaximizeButton="False" DisableMinimizeButton="False" DisplayName="Create Form" FormHeight="400" FormSchema="%[{&quot;label&quot;:&quot;Select an Account&quot;,&quot;tableView&quot;:false,&quot;defaultValue&quot;:{&quot;&quot;:false,&quot;revolutPersonal&quot;:false,&quot;revolutSandbox&quot;:false},&quot;values&quot;:[{&quot;label&quot;:&quot;Revolut Personal&quot;,&quot;value&quot;:&quot;revolutPersonal&quot;,&quot;shortcut&quot;:&quot;A&quot;},{&quot;label&quot;:&quot;Revolut Sandbox&quot;,&quot;value&quot;:&quot;revolutSandbox&quot;,&quot;shortcut&quot;:&quot;B&quot;}],&quot;validate&quot;:{&quot;required&quot;:true,&quot;minSelectedCount&quot;:1,&quot;maxSelectedCount&quot;:1},&quot;key&quot;:&quot;selectAnAccount&quot;,&quot;type&quot;:&quot;selectboxes&quot;,&quot;input&quot;:true,&quot;inputType&quot;:&quot;checkbox&quot;,&quot;calculateServer&quot;:false},{&quot;tag&quot;:&quot;h2&quot;,&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;Revolut Sandbox&quot;,&quot;key&quot;:&quot;label&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Login SandBox&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;loginSandBox&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutSandbox&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;label4&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Send money to Rory Pearson&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;sendMoney&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutSandbox&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;tag&quot;:&quot;h2&quot;,&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;Virtual Card&quot;,&quot;key&quot;:&quot;VirtualCard&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;label1&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Login Personal&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;login&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Get The Last 5 Transactions&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;getLast&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;General Settings&quot;,&quot;key&quot;:&quot;GeneralSettings&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Freeze Card&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;freezeCard&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Unfreeze Card&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;unfreezeCard&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch On Contactless Payment&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OnContactless&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch Off Contactless Payment&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OffContactless&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch On Location-Based Security&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OnLocation&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch Off Location-Based Security&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OffLocation&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch On Swipe Payments &quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OnSwipe&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Switch Off Swipe Payments Button&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OffSwipe&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;},{&quot;label&quot;:&quot;Switch On ATM Withdrawls&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OnATM&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;},{&quot;label&quot;:&quot;Switch Off ATM Withdrawls&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OffATM&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;},{&quot;label&quot;:&quot;Switch On Online Transactions&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OnOnline&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;},{&quot;label&quot;:&quot;Switch Off Online Transactions&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;OffOnline&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;label5&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;Pin Settings&quot;,&quot;key&quot;:&quot;Pin Settings&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Unblock PIN/CVV&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;unblockPinCvv&quot;,&quot;conditional&quot;:{&quot;show&quot;:true,&quot;when&quot;:&quot;selectAnAccount&quot;,&quot;eq&quot;:&quot;revolutPersonal&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;label6&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;100220&quot;,&quot;Name&quot;:&quot;Sandstone&quot;,&quot;BaseCss&quot;:&quot;../../assets/css/themes/sandstone.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;../../assets/themeicons/sandstone.png&quot;,&quot;OverrideCssUrl&quot;:&quot;&quot;,&quot;UserStyleOverrides&quot;:&quot;&quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:false,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormWidth="800" GenerateInputFields="True" sap:VirtualizedContainerService.HintSize="435.2,211.2" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </ActivityAction>
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ufa:FormActivity.FormFieldsCollection>
      <ufa:FormActivity.FormFieldsOutputData>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">JsonData</mca:CSharpReference>
        </OutArgument>
      </ufa:FormActivity.FormFieldsOutputData>
      <ufa:FormActivity.SelectedButton>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">selectedButton</mca:CSharpReference>
        </OutArgument>
      </ufa:FormActivity.SelectedButton>
    </ufa:FormActivity>
    <Assign sap:VirtualizedContainerService.HintSize="435.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">out_selectedButton</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">selectedButton</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="435.2,231.2" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1">
            <ui:MessageBox.Text>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">selectedButton</mca:CSharpValue>
              </InArgument>
            </ui:MessageBox.Text>
          </ui:MessageBox>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>